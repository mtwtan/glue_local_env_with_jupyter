{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "root\n",
      " |-- 813415774\t20180101\t201801\t2018\t2018.0027\t\t\t\t\t\t\t\t\t\t\tAGR\tFARMER\t\t\t\t\t\tAGR\t\t\t1\t036\t036\t03\t1\t4.0\t45\t6\t45\t-1.07036692050604\t0\t\t\t\t\t\t\t4\tCalgary: string (nullable = true)\n",
      " |--  Alberta1: string (nullable = true)\n",
      " |--  Canada\tCA\tCA01\t51.0833\t-114.083\t-561990\t4\tCalgary: string (nullable = true)\n",
      " |--  Alberta3: string (nullable = true)\n",
      " |--  Canada\tCA\tCA01\t51.0833\t-114.083\t-561990\t20190101\thttps://www.weyburnreview.com/cn-rail-and-cp-rail-exceed-grain-revenue-max-despite-drop-in-grain-shipping-1.23568755: string (nullable = true)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from pyspark.sql import SparkSession\n",
    "spark1 = SparkSession.builder.appName('Ops').getOrCreate()\n",
    "df = spark1.read.csv('s3a://tanmatth-emr/gdelt-open-data/events/20190101.export.csv', inferSchema=True,header=True)\n",
    "df.printSchema()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Count: 1961\n",
      "root\n",
      "|-- family_name: string\n",
      "|-- name: string\n",
      "|-- links: array\n",
      "|    |-- element: struct\n",
      "|    |    |-- note: string\n",
      "|    |    |-- url: string\n",
      "|-- gender: string\n",
      "|-- image: string\n",
      "|-- identifiers: array\n",
      "|    |-- element: struct\n",
      "|    |    |-- scheme: string\n",
      "|    |    |-- identifier: string\n",
      "|-- other_names: array\n",
      "|    |-- element: struct\n",
      "|    |    |-- lang: string\n",
      "|    |    |-- note: string\n",
      "|    |    |-- name: string\n",
      "|-- sort_name: string\n",
      "|-- images: array\n",
      "|    |-- element: struct\n",
      "|    |    |-- url: string\n",
      "|-- given_name: string\n",
      "|-- birth_date: string\n",
      "|-- id: string\n",
      "|-- contact_details: array\n",
      "|    |-- element: struct\n",
      "|    |    |-- type: string\n",
      "|    |    |-- value: string\n",
      "|-- death_date: string\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "from awsglue.transforms import *\n",
    "from awsglue.utils import getResolvedOptions\n",
    "from pyspark.context import SparkContext\n",
    "from awsglue.context import GlueContext\n",
    "from awsglue.job import Job\n",
    "\n",
    "glueContext = GlueContext(SparkContext.getOrCreate())\n",
    "\n",
    "persons = glueContext.create_dynamic_frame.from_catalog(\n",
    "             database=\"uslegislators_gluecrawler\",\n",
    "             table_name=\"persons\")\n",
    "print(\"Count: \" + str(persons.count()))\n",
    "persons.printSchema()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total 16\r\n",
      "-rw-rw-r-- 1 glue glue   72 Mar 17 20:29 Untitled.ipynb\r\n",
      "drwxr-xr-x 4 glue glue  128 Mar 17 20:05 docker\r\n",
      "-rw-rw-r-- 1 glue glue  555 Mar 17 20:33 pyspark_test.ipynb\r\n",
      "-rw-r--r-- 1 glue glue 6019 Feb  4 03:34 rationalize.py\r\n"
     ]
    }
   ],
   "source": [
    "! ls -l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2020-01-15 18:17:36 617937865390forecastpoc\n",
      "2020-01-16 17:09:08 617937865390personalizepoc\n",
      "2019-09-23 16:46:22 aws-athena-query-results-617937865390-us-east-1\n",
      "2019-04-02 01:20:59 aws-athena-query-results-617937865390-us-east-2\n",
      "2019-09-23 17:12:31 aws-athena-query-results-us-east-1-617937865390\n",
      "2019-10-25 14:19:40 aws-codestar-us-east-1-617937865390\n",
      "2019-09-26 17:51:16 aws-deepracer-4a5eae27-5f85-4b2c-b23e-358136b55b05\n",
      "2020-01-24 22:04:11 aws-glue-notebooks-617937865390-us-east-2\n",
      "2020-01-22 02:57:02 aws-glue-scripts-617937865390-us-east-2\n",
      "2020-01-22 02:57:03 aws-glue-temporary-617937865390-us-east-2\n",
      "2019-06-08 21:45:26 aws-logs-617937865390-us-east-2\n",
      "2019-10-03 17:12:20 bigdata-iot-2019\n",
      "2019-03-28 01:36:46 cf-templates-oyjfd4d4lzuk-us-east-1\n",
      "2019-02-27 18:35:46 cf-templates-oyjfd4d4lzuk-us-east-2\n",
      "2019-03-06 18:32:52 cf-templates-oyjfd4d4lzuk-us-west-2\n",
      "2019-01-08 19:27:18 cloudtrail-awslogs-617937865390-khymuuzf-isengard-do-not-delete\n",
      "2019-03-20 18:27:16 codepipeline-us-east-2-435771791470\n",
      "2019-03-18 13:57:18 config-bucket-617937865390\n",
      "2019-01-08 19:42:07 do-not-delete-gatedgarden-audit-617937865390\n",
      "2019-09-20 15:19:24 elasticbeanstalk-us-east-1-617937865390\n",
      "2019-01-29 21:32:09 elasticbeanstalk-us-east-2-617937865390\n",
      "2019-03-06 21:53:22 elasticbeanstalk-us-west-2-617937865390\n",
      "2019-08-14 17:17:18 ka-java-lab-artifactbucket-w9374p6afyex\n",
      "2020-01-17 13:24:54 s3-cost-usage\n",
      "2020-02-12 15:43:33 stepfunctions-emrproject-617937865390-us-east-2\n",
      "2019-05-14 17:12:43 tanmatth-cfscripts\n",
      "2019-08-05 15:40:30 tanmatth-cloudtrail\n",
      "2019-08-05 15:41:18 tanmatth-cloudtrail1\n",
      "2019-06-10 02:29:44 tanmatth-emr\n",
      "2019-10-31 15:50:16 tanmatth-emr-workshop\n",
      "2020-01-15 18:18:04 tanmatth-forecast\n",
      "2019-05-15 18:30:53 tanmatth-guarddutylogs\n",
      "2019-11-21 19:13:43 tanmatth-lakeformation\n",
      "2019-11-21 19:15:01 tanmatth-lakeformation-db\n",
      "2019-09-23 16:34:48 tanmatth-mindshare-athena-logs\n",
      "2019-09-26 15:14:08 tanmatth-penguin-outfitters-adpubdata\n",
      "2020-01-09 15:02:45 tanmatth-temp\n",
      "2020-01-22 03:07:09 tanmatth-vpc-flowlogs\n"
     ]
    }
   ],
   "source": [
    "! aws s3 ls\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Count: 13\n",
      "root\n",
      "|-- identifiers: array\n",
      "|    |-- element: struct\n",
      "|    |    |-- scheme: string\n",
      "|    |    |-- identifier: string\n",
      "|-- other_names: array\n",
      "|    |-- element: struct\n",
      "|    |    |-- lang: string\n",
      "|    |    |-- note: string\n",
      "|    |    |-- name: string\n",
      "|-- id: string\n",
      "|-- classification: string\n",
      "|-- name: string\n",
      "|-- links: array\n",
      "|    |-- element: struct\n",
      "|    |    |-- note: string\n",
      "|    |    |-- url: string\n",
      "|-- image: string\n",
      "|-- seats: int\n",
      "|-- type: string\n",
      "\n"
     ]
    }
   ],
   "source": [
    "orgs = glueContext.create_dynamic_frame.from_catalog(\n",
    "           database=\"uslegislators_gluecrawler\",\n",
    "           table_name=\"organization\")\n",
    "print(\"Count: \" + str(orgs.count()))\n",
    "orgs.printSchema()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
